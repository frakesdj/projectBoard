{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frake\\\\Desktop\\\\Project Board\\\\project-board\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport './App.css';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport _ from \"lodash\";\nimport { v4 } from \"uuid\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst item = {\n  id: v4(),\n  name: \"Clean the house\",\n  description: \"dddd\"\n};\nconst item2 = {\n  id: v4(),\n  name: \"Wash the car\",\n  description: \"\"\n};\n\nfunction App() {\n  _s();\n\n  const [text, setText] = useState(\"\");\n  const [state, setState] = useState({\n    \"todo\": {\n      title: \"Todo\",\n      items: [item, item2]\n    },\n    \"in-progress\": {\n      title: \"In Progress\",\n      items: []\n    },\n    \"done\": {\n      title: \"Completed\",\n      items: []\n    }\n  });\n\n  const handleDragEnd = _ref => {\n    let {\n      destination,\n      source\n    } = _ref;\n\n    if (!destination) {\n      return;\n    }\n\n    if (destination.index === source.index && destination.droppableId === source.droppableId) {\n      return;\n    } // Creating a copy of item before removing it from state\n\n\n    const itemCopy = { ...state[source.droppableId].items[source.index]\n    };\n    setState(prev => {\n      prev = { ...prev\n      }; // Remove from previous items array\n\n      prev[source.droppableId].items.splice(source.index, 1); // Adding to new items array location\n\n      prev[destination.droppableId].items.splice(destination.index, 0, itemCopy);\n      return prev;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleDragEnd,\n      children: _.map(state, (data, key) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: data.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: key,\n            children: (provided, snapshot) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.droppableProps,\n                className: \"droppable-col\",\n                children: [data.items.map((el, index) => {\n                  return /*#__PURE__*/_jsxDEV(Draggable, {\n                    index: index,\n                    draggableId: el.id,\n                    children: (provided, snapshot) => {\n                      console.log(snapshot);\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: `item ${snapshot.isDragging && \"dragging\"}`,\n                        ref: provided.innerRef,\n                        ...provided.draggableProps,\n                        ...provided.dragHandleProps,\n                        children: [el.name, /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"text\",\n                          id: \"tagBar\",\n                          value: el.description\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 93,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 84,\n                        columnNumber: 33\n                      }, this);\n                    }\n                  }, el.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 27\n                  }, this);\n                }), provided.placeholder]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 21\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"8roOSWkz23ChYltIntb2gUGtuww=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/frake/Desktop/Project Board/project-board/src/App.js"],"names":["logo","DragDropContext","Droppable","Draggable","_","v4","React","useState","item","id","name","description","item2","App","text","setText","state","setState","title","items","handleDragEnd","destination","source","index","droppableId","itemCopy","prev","splice","map","data","key","provided","snapshot","innerRef","droppableProps","el","console","log","isDragging","draggableProps","dragHandleProps","placeholder"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport {DragDropContext, Droppable, Draggable} from \"react-beautiful-dnd\";\nimport _ from \"lodash\";\nimport {v4} from \"uuid\";\nimport React, {useState}  from \"react\";\n\nconst item = {\n  id: v4(),\n  name: \"Clean the house\",\n  description: \"dddd\"\n}\n\nconst item2 = {\n  id: v4(),\n  name: \"Wash the car\",\n  description: \"\"\n}\n\nfunction App() {\n  const [text, setText] = useState(\"\")\n  const [state, setState] = useState({\n    \"todo\": {\n      title: \"Todo\",\n      items: [item, item2]\n    },\n    \"in-progress\": {\n      title: \"In Progress\",\n      items: []\n    },\n    \"done\": {\n      title: \"Completed\",\n      items: []\n    }\n  })\n\n  const handleDragEnd = ({destination, source}) => {\n    if (!destination) {\n      return\n    }\n\n    if (destination.index === source.index && destination.droppableId === source.droppableId) {\n      return\n    }\n\n    // Creating a copy of item before removing it from state\n    const itemCopy = {...state[source.droppableId].items[source.index]}\n\n    setState(prev => {\n      prev = {...prev}\n      // Remove from previous items array\n      prev[source.droppableId].items.splice(source.index, 1)\n\n\n      // Adding to new items array location\n      prev[destination.droppableId].items.splice(destination.index, 0, itemCopy)\n\n      return prev\n    })\n  }\n\n  return (\n    <div className=\"App\">\n      <DragDropContext onDragEnd={handleDragEnd}>\n        {_.map(state, (data, key) => {\n          return(\n            <div key={key} className={\"column\"}>\n              <h3>{data.title}</h3>\n              <Droppable droppableId={key}>\n                {(provided, snapshot) => {\n                  return(\n                    <div\n                      ref={provided.innerRef}\n                      {...provided.droppableProps}\n                      className={\"droppable-col\"}\n                    >\n                      {data.items.map((el, index) => {\n                        return(\n                          <Draggable key={el.id} index={index} draggableId={el.id}>\n                            {(provided, snapshot) => {\n                              console.log(snapshot)\n                              return(\n\n                                <div\n                                  className={`item ${snapshot.isDragging && \"dragging\"}`}\n                                  ref={provided.innerRef}\n                                  {...provided.draggableProps}\n                                  {...provided.dragHandleProps}\n                                >\n                  \n                                  {el.name}\n                                  \n                                  <input\n                                    type=\"text\"\n                                    id=\"tagBar\"\n                                    value={el.description}\n                                  />\n\n                                </div>\n                              \n                              )\n                            }}\n                          </Draggable>\n                        )\n                      })}\n                      {provided.placeholder}\n                    </div>\n                  )\n                }}\n              </Droppable>\n            </div>\n          )\n        })}\n      </DragDropContext>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}